
/*
 * This file is part of Eqela Samples
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import capex.crypto

class #widget #main:

ui LayerWidget
{
	CanvasWidget {
		color = Color.forString("#CCCCCC")
	}
	VerticalBoxWidget {
		margin = context.getHeightValue("10mm")
		spacing = context.getHeightValue("10mm")
		LabelWidget encryptedText {
			text = "Encrypt"
			textAlign = LabelWidget.ALIGN_CENTER
		}
		LabelWidget decryptedText {
			text = "Decrypt"
			textAlign = LabelWidget.ALIGN_CENTER
		}
	}
}

func initializeWidget override
{
	base.initializeWidget()
	var encipher = AES128Cipher.create("Sample AES128Key", "SampleAES128IVal")
	var encrypt = BlockCipher.encryptString("Hello World", encipher)
	encryptedText.setWidgetText("Encrypted: " .. Base64Encoder.encode(encrypt))
	var decipher = AES128Cipher.create("Sample AES128Key", "SampleAES128IVal")
	var decrypt = BlockCipher.decryptString(encrypt, decipher)
	decryptedText.setWidgetText("Decrypted : " .. decrypt)
	PRINT "Decrypt : " .. decrypt
}
